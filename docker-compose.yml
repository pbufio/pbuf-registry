version: '3.8'
services:
  db:
    image: postgres:14.7
    restart: always
    networks:
      - internal
    expose:
      - "5432"
    volumes:
      - ./.postgres-data:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: pbuf
      POSTGRES_PASSWORD: pbuf
      POSTGRES_DB: pbuf_registry
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready", "-d", "pbuf_registry" ]
      interval: 5s
      timeout: 10s
      retries: 5
  pbuf-registry:
    image: ghcr.io/pbufio/registry:v0.3.0
    restart: always
    depends_on:
      - db
    networks:
      - internal
    ports:
      - "8080:8080"
      - "6777:6777"
      - "127.0.0.1:8082:8082"
    healthcheck:
      test: wget -O - http://localhost:8082/healthz || exit 1
      interval: 5s
      timeout: 10s
      retries: 5
    volumes:
      - ./gen/certs:/app/certs
    environment:
      DATA_DATABASE_DSN: "postgres://pbuf:pbuf@db:5432/pbuf_registry?sslmode=disable"
      SERVER_GRPC_TLS_ENABLED: true
      SERVER_GRPC_TLS_CERTFILE: /app/certs/server-cert.pem
      SERVER_GRPC_TLS_KEYFILE: /app/certs/server-key.pem
      SERVER_GRPC_AUTH_ENABLED: true
      SERVER_GRPC_AUTH_TYPE: static-token
      SERVER_HTTP_AUTH_ENABLED: true
      SERVER_HTTP_AUTH_TYPE: static-token
      SERVER_STATIC_TOKEN: ${SERVER_STATIC_TOKEN}
    command: >
      sh -c "/app/pbuf-migrations && /app/pbuf-registry"

networks:
  internal: